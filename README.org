#+title: Vector Add on Constellation

* Introduction

This project contains a simple divide-and-conquer style vector addition program
for [[https://github.com/NLeSC/Constellation][Constellation]].  

* Installation

To install this software, Java >= 8 is required.  The software can be built
with:

#+begin_src sh
git clone https://github.com/JungleComputing/btp-hd-simple-row
cd btp-hd-simple-row
./gradlew distTar
#+end_src

This creates a distribution in ~build/distributions~ that can be unpacked
anywhere and run with:

#+begin_src sh
cp build/distributions/btp-hd-simple-row.tar /path/of/your/choice
cd /path/of/your/choice
tar xf btp-hd-simple-row.tar
#+end_src

Alternatively, the following command installs the distribution in
~build/install~. 

#+begin_src sh
./gradlew installDist
#+end_src

* Running

For running this application, we assume that the distribution has been
installed in ~/path/of/your/choice~.  For example, if you installed it using
~installDist~, the path would look like:

#+begin_src sh
export ROW_IMPL_DIR=/path/of/your/choice/btp-hd-simple-row/build/install/btp-hd-simple-row
#+end_src

Otherwise:

#+begin_src sh
export ROW_IMPL_DIR=/path/of/your/choice/btp-hd-simple-row
cd $ROW_IMPL_DIR
#+end_src

** Running locally

We can start the application using the command below.  In this case,
we will do a vector addition of 8192 elements, the threshold to decide whether
to compute or to divide into smaller tasks is 128.

#+begin_src sh
./bin/btp-hd-simple-row.local -n 8192 -computeDivideThreshold 128
#+end_src


** Running on the DAS-5

The next step is to run the Constellation server on the head node of the
cluster.  To do this, we have to add to the environment on which port we want
to communicate with the Constellation server:

#+begin_src sh
export CONSTELLATION_PORT=<your unique port number>
#+end_src

We can now start the Constellation server:

#+begin_src sh
./bin/constellation-server
#+end_src

Finally, we can start the application using the command below.  In this case,
we will do a vector addition of 8192 elements, the threshold to decide whether
to compute or to divide into smaller tasks is 128, and we will run it on 2
regular nodes in the DAS-5 cluster.

#+begin_src sh
./bin/btp-hd-simple-row -n 8192 -computeDivideThreshold 128 regular=2
#+end_src

